ts = rawdat[id,]
if(fisher.test(ts)$p>0.9){
fisher_results = rbind(fisher_results,c(row.names(ts),as.numeric(fisher.test(ts)$p)))
}
if(chisq.test(ts,correct = FALSE)$p.value>0.9){
chisq_results=rbind(chisq_results,c(row.names(ts),as.numeric(chisq.test(ts,correct = FALSE)$p.value)))
}
}
#mutually exclusive test
chisq_test_exclusive = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-(411-mtx[1,1]))^2/(411-mtx[1,1]) +(mtx[2,2]-mtx[1,1])^2/mtx[1,1]
return(pchisq(TS,1,lower.tail = FALSE))
}
exclusive_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_exclusive(ts)>0){
exclusive_results=rbind(exclusive_results,c(row.names(ts),as.numeric(chisq_test_exclusive(ts))))
}
}
# chisq_results = chisq_results[chisq_results[,3]>0.9,]
# fisher_results = fisher_results[fisher_results[,3]>0.9,]
# exclusive_results = exclusive_results[exclusive_results[,3]>0.0001,]
# chisq_results = chisq_results[order(chisq_results[,3],decreasing = T),]
# fisher_results = fisher_results[order(fisher_results[,3],decreasing = T),]
# exclusive_results = exclusive_results[order(exclusive_results[,3],decreasing = T),]
#mutually co occurrence test
combinations = combn(1:length(rawdat[,1]),2)
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p>0.9){
fisher_results = rbind(fisher_results,c(row.names(ts),as.numeric(fisher.test(ts)$p)))
}
if(chisq.test(ts,correct = FALSE)$p.value>0.9){
chisq_results=rbind(chisq_results,c(row.names(ts),as.numeric(chisq.test(ts,correct = FALSE)$p.value)))
}
}
#mutually exclusive test
chisq_test_exclusive = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-(411-mtx[1,1]))^2/(411-mtx[1,1]) +(mtx[2,2]-mtx[1,1])^2/mtx[1,1]
return(pchisq(TS,1,lower.tail = FALSE))
}
exclusive_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_exclusive(ts)>0){
exclusive_results=rbind(exclusive_results,c(row.names(ts),as.numeric(chisq_test_exclusive(ts))))
}
}
View(exclusive_results)
a = exclusive_results[order(exclusive_results[,3]),]
View(a)
a
a =
na
a = na
a =null
a = NULL
1 > 1e-10
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p = 1){
combinations = combn(1:length(rawdat[,1]),2)
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p = 1){
#mutually co occurrence test
combinations = combn(1:length(rawdat[,1]),2)
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p = 1){
#mutually co occurrence test
combinations = combn(1:length(rawdat[,1]),2)
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p == 1){
fisher_results = rbind(fisher_results,c(row.names(ts),as.numeric(fisher.test(ts)$p)))
}
if(chisq.test(ts,correct = FALSE)$p.value == 1){
chisq_results=rbind(chisq_results,c(row.names(ts),as.numeric(chisq.test(ts,correct = FALSE)$p.value)))
}
}
#mutually exclusive test
chisq_test_exclusive = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-(411-mtx[1,1]))^2/(411-mtx[1,1]) +(mtx[2,2]-mtx[1,1])^2/mtx[1,1]
return(pchisq(TS,1,lower.tail = FALSE))
}
exclusive_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_exclusive(ts)>0){
exclusive_results=rbind(exclusive_results,c(row.names(ts),as.numeric(chisq_test_exclusive(ts))))
}
}
View(chisq_results)
View(rawdat)
exclusive_results[exclusive_results[,3]>1e-100,]
exclusive_results[as.numeric(exclusive_results[,3])>1e-100,]
#mutually co occurrence test
combinations = combn(1:length(rawdat[,1]),2)
fisher_results = c()
chisq_results = c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
if(fisher.test(ts)$p == 1){
fisher_results = rbind(fisher_results,c(row.names(ts),fisher.test(ts)$p))
}
if(chisq.test(ts,correct = FALSE)$p.value == 1){
chisq_results=rbind(chisq_results,c(row.names(ts),chisq.test(ts,correct = FALSE)$p.value))
}
}
#mutually exclusive test
chisq_test_exclusive = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-(411-mtx[1,1]))^2/(411-mtx[1,1]) +(mtx[2,2]-mtx[1,1])^2/mtx[1,1]
return(pchisq(TS,1,lower.tail = FALSE))
}
exclusive_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_exclusive(ts)>0){
exclusive_results=rbind(exclusive_results,c(row.names(ts),chisq_test_exclusive(ts)))
}
}
View(fisher_results)
View(exclusive_results)
View(chisq_results)
View(exclusive_results)
exclusive_results[as.numeric(exclusive_results[,3]),]
exclusive_results[as.numeric(exclusive_results[,3]>e-100),]
exclusive_results[as.numeric(exclusive_results[,3]>1e-100),]
exclusive_results[as.numeric(exclusive_results[,3])>e-100,]
exclusive_results[as.numeric(exclusive_results[,3])>1e-100,]
exclusive_results[as.numeric(exclusive_results[,3])>1e-100,]
chisq.test(c(1,2))
View(rawdat)
chisq.test(matrix(c(1,2,3,4),2))
View(rawdat)
chisq.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,0,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T),correct = T)
chisq.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T),correct = F)
chisq.test(matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T),correct = F)
matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T)
chisq.test(matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T),correct = F)
chisq.test(matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,1,1,1,0,0,0),ncol = 6,nrow = 2,byrow = T))
chisq.test(matrix(c(1,0,0,0,0,0,1,1,1,1,0,0),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
matrix(c(1,0,0,0,0,0,1,1,0,0,0,0),ncol = 6,nrow = 2,byrow = T)
matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T)
fisher.test(matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,0,0,0,0,0,1,1,1,1,0,0),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,0,0,0,0,0,1,1,1,1,1,0),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,0,0,0,0,0,1,1,1,1,1,1),ncol = 6,nrow = 2,byrow = T))
fisher.test(matrix(c(1,1,0,0,0,0,1,1,1,1,1,1),ncol = 6,nrow = 2,byrow = T))
matrix(c(1,0,0,0,0,0,1,0,0,0,0,0),ncol = 6,nrow = 2,byrow = T)
matrix(c(400,100,100,400))
matrix(c(400,100,100,400),2)
matrix(c(400,100,400,100),2)
matrix(c(400,400,100,100),2)
matrix(c(400,400,100,100),2)
fisher.test(matrix(c(400,400,100,100),2))
chisq_test_co = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-mtx[1,1])^2/mtx[1,1] +(mtx[2,2]-mtx[1,2])^2/mtx[1,2]
return(pchisq(TS,1,lower.tail = FALSE))
}
chisq_test_co = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-mtx[1,1])^2/mtx[1,1] +(mtx[2,2]-mtx[1,2])^2/mtx[1,2]
return(pchisq(TS,1,lower.tail = FALSE))
}
chisq_test_co_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_co(ts)>0){
chisq_test_co_results=rbind(chisq_test_co_results,c(row.names(ts),chisq_test_co(ts)>0))
}
# exclusive_results[as.numeric(exclusive_results[,3])>1e-100,]
}
View(chisq_test_co_results)
chisq_test_co = function(mtx){
# expected = matrix(c(411,0,0,411),2,byrow = T)
TS = (mtx[1,1]-mtx[1,1])^2/mtx[1,1] + (mtx[1,2]-mtx[1,2])^2/(mtx[1,2]) +
(mtx[2,1]-mtx[1,1])^2/mtx[1,1] +(mtx[2,2]-mtx[1,2])^2/mtx[1,2]
return(pchisq(TS,1,lower.tail = FALSE))
}
chisq_test_co_results=c()
for (i in 1:length(combinations[1,])){
id = combinations[,i]
ts = rawdat[id,]
# exclusive_results=c(exclusive_results,chisq_test_exclusive(ts))
if(chisq_test_co(ts)<0.05){
chisq_test_co_results=rbind(chisq_test_co_results,c(row.names(ts),chisq_test_co(ts)))
}
# exclusive_results[as.numeric(exclusive_results[,3])>1e-100,]
}
View(chisq_test_co_results)
View(raw_dat)
View(rawdat)
View(dat)
dat[combinations[,1],]
a =
dat[combinations[,1],]
a= dat[combinations[,1],]
a
apply(a,2,function(r){sum(r)})
b = apply(a,2,function(r){sum(r)})
length(a)
length(b)
b = apply(a,2,function(r){if(r[1] == r[2]){return(1)}
else{return(0)}})
b
pbinom(5,10,0.5)
pbinom(6,10,0.5)
pbinom(8,10,0.5,lower.tail = F)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){if(r[1] == r[2]){return(1)}else{return(0)}})
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,pbinom(n1,n2,0.5,lower.tail = F))}
}
i = 1
id = combinations[,i]
id
combinations[,1]
#mutually co occurrence test
combinations = combn(1:length(rawdat[,1]),2)
combinations[1:5]
View(combinations)
i = 1
id = combinations[,i]
id
mtx = dat[id,]
mtx
ts = apply(a,2,function(r){if(r[1]==r[2]){return(0)}else{return(0)}})
ts
ts = apply(a,2,function(r){if(r[1]==r[2]){return(1)}else{return(0)}})
ts
n1 = sum(ts)
n2 = length(ts)
n1
n2
ts
row.names(ts)
rownames(ts)
rownames(mtx)
length(rawdat[,1])
length(dat[,1])
?if
else
?else
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){if(r[1]==r[2]==1){return(1)}
#mutually co occurrence test
combinations = combn(1:length(dat[,1]),2)
dat = read.csv('updated_encoding_BLCA.csv',header = 1,row.names = 1)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){if(r[1]==r[2]==1){return(1)}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){
if(r[1]=r[2]=1){return(1)}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){
if(r[1]=r[2]&r[1]=1){return(1)}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(a,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(as.numeric(r[1])+as.numeric(r[2]))==1){return(0)}
})
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
i = 1
id = combinations[,i]
mtx = dat[id,]
mtx
ts = apply(a,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
ts
View(ts)
a
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
ts
View(ts)
mtx
length(ts)
sum(ts)
ts == NULL
View(ts)
class(ts)
unlist(ts)
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
ts = unlist(ts)
ts
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
View(ts)
ts.values
ts
unlist(ts)
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
ts
pbinom(0,10,0.5,lower.tail = F)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
pbinom(5,10,0.5,lower.tail = F)
pbinom(4,10,0.5,lower.tail = F)
pbinom(50,100,0.5,lower.tail = F)
pbinom(49,100,0.5,lower.tail = F)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<0.5){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
view(binomial_test_co_result)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = rbind(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
View(binomial_test_co_result)
ts
sample(ts,50,replace = T)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
ts = sample(ts,100,replace = T)
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = rbind(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
View(binomial_test_co_result)
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj")
dat = read.csv('unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv',header = 1)
View(dat)
length(dat[1,])
dat = read.csv('unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv',header = 1,row.names = 1)
View(dat)
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
dat = readSubject("100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt")
dat = readSubject("100307_T1w_acpc_dc_297Labels_M2_corrected_stats.txt")
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj")
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
fullPath = paste(roiDir, fileList[1], sep = "")
fileList
fullPath
dat = readSubject(fullPath)
