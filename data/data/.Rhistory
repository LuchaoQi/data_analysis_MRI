27.89
27.88
27.89
27.82
27.84
27.98
27.89
27.8
27.9
27.87
27.94
28.02
27.91
27.72
27.77
27.78
27.79
27.72
27.75
27.67
27.61
27.69
27.64
27.47
27.55
27.42
27.64
27.63
27.69
27.65
27.74
27.75
27.67
27.82
27.74
27.81
27.81
27.84
27.92
27.81
27.86
27.84
27.84
27.8
27.83
27.82
27.86
27.84
27.83
27.89
27.79
27.87
27.84
27.67
27.69
27.73
27.7
27.67
27.69
27.72
27.73
27.8
27.77
27.67
27.69
27.75
27.77
27.87
27.8
27.88
27.76
27.76
27.74
27.7
27.7
27.81
27.79
27.89
27.77
27.78
27.77
27.76
27.8
27.93
28
28.06
27.94
27.97
28.01
28.13
27.89
27.94
27.94
27.94
27.83
27.86
27.93
27.91
27.83
27.81
27.89
27.97
27.81
27.91
27.93
27.96
27.93
27.92
28
27.98
27.89
28
28
28.06
28
27.84
27.92
27.89
27.91
27.94
27.93
27.94
27.98
27.97
27.87
27.78
27.89
27.94
27.91
27.95
28.01
27.97
27.96
27.93
27.79
27.82
27.73
27.81
27.83)
?paste
a = paste(27.4
27.41
27.4
27.48
27.48
27.5
27.43
27.48
27.45
27.45
27.57
27.56
27.67
27.61
27.62
27.64
27.47
27.52
27.51
27.58
27.35
27.4
27.47
27.6
27.56
27.56
27.62
27.52
27.53
27.5
27.5
27.53
27.64
27.71
27.62
27.76
27.76
27.62
27.62
27.68
27.83
27.89
27.88
27.89
27.82
27.84
27.98
27.89
27.8
27.9
27.87
27.94
28.02
27.91
27.72
27.77
27.78
27.79
27.72
27.75
27.67
27.61
27.69
27.64
27.47
27.55
27.42
27.64
27.63
27.69
27.65
27.74
27.75
27.67
27.82
27.74
27.81
27.81
27.84
27.92
27.81
27.86
27.84
27.84
27.8
27.83
27.82
27.86
27.84
27.83
27.89
27.79
27.87
27.84
27.67
27.69
27.73
27.7
27.67
27.69
27.72
27.73
27.8
27.77
27.67
27.69
27.75
27.77
27.87
27.8
27.88
27.76
27.76
27.74
27.7
27.7
27.81
27.79
27.89
27.77
27.78
27.77
27.76
27.8
27.93
28
28.06
27.94
27.97
28.01
28.13
27.89
27.94
27.94
27.94
27.83
27.86
27.93
27.91
27.83
27.81
27.89
27.97
27.81
27.91
27.93
27.96
27.93
27.92
28
27.98
27.89
28
28
28.06
28
27.84
27.92
27.89
27.91
27.94
27.93
27.94
27.98
27.97
27.87
27.78
27.89
27.94
27.91
27.95
28.01
27.97
27.96
27.93
27.79
27.82
27.73
27.81
27.83,sep = '\t')
a = c(1,2,3,3,1,4,4,,2,23,23,4,1213,2,2,3,4,5,,6,1,23,5)
a = c(1,2,3,3,1,4,4,,2,23,23,4,1213,2,2,3,4,5,6,1,23,5)
hist(a,probability = 1)
a = c(1,2,3,3,1,4,4,2,23,23,4,1213,2,2,3,4,5,6,1,23,5)
hist(a,probability = 1)
hist(a)
a = c(1,2,3,3,1,4,4,2,23,23,4,12,13,2,2,3,4,5,6,1,23,5)
hist(a,probability = 1)
?kmeans
?faithful
shiny::runApp('C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/quiz5/Clustering')
runApp('C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/quiz5/Clustering')
install.packages(shinydashboard)
install.packages('shinydashboard')
install.packages('shinydashboard')
install.packages("shinydashboard")
updateR()
updateR()
runApp('C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/hw4_shiny/BMI')
runApp('C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/hw4_shiny/BMI')
runApp('C:/Users/lcqi/OneDrive/Desktop/Courses/introduction_to_data_science_for_BME/quiz5/Clustering')
updateR()
library(installr)
updateR()
updateR()
setInternet2(TRUE)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
fullPath = paste(roiDir, fileList[1], sep = "")
dat = readSubject(fullPath)
library(tidyverse)
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject(fullPath)
library(MRIcloudT1volumetrics)
dat = readSubject(fullPath)
setInternet2(TRUE)
setInternet2(TRUE)
setInternet2(TRUE)
dat = readSubject(fullPath)
setInternet2(use = TRUE)
library(installr)
library(tidyverse)
library(tidyverse)
install.packages('backports')
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
dat = rbind(dat,dat_each)
}
pca.result = prcomp(dat, scale. = T)
library(factoextra)
ev = get_eig(pca.result)
# ev = pca.result$sdev^2
fviz_eig(pca.result)
summary(pca.result)
# library(ggfortify)
# library(cluster)
# autoplot(clara(dat, 3))
prop.table
?prop.table
dat_proportion = prop.table(dat,margin = 1)
dat_proportion = prop.table(as.matrix(dat),margin = 1)
View(dat_proportion)
log(matrix(c(1,2,3,4,5,6),2))
dat_proportion = prop.table(as.matrix(dat),margin = 1) %>% log()
pca.result = prcomp(dat_proportion,scale. = T)
dat_proportion = prop.table(as.matrix(dat),margin = 1) %>% log()
pca.result = prcomp(dat_proportion,scale. = T)
ev = get_eig(pca.result)
fviz_eig(pca.result)
summary(pca.result)
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
dat = rbind(dat,dat_each)
}
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
dat = rbind(dat,dat_each)
}
pca.result = prcomp(dat, scale. = T)
library(factoextra)
ev = get_eig(pca.result)
# ev = pca.result$sdev^2
fviz_eig(pca.result)
summary(pca.result)
# library(ggfortify)
# library(cluster)
# autoplot(clara(dat, 3))
dat_proportion = prop.table(as.matrix(dat),margin = 1) %>% log()
pca.result_p = prcomp(dat_proportion,scale. = T)
ev_p = get_eig(pca.result_p)
fviz_eig(pca.result_p)
summary(pca.result_p)
```{r message=F}
pca.result = prcomp(dat, scale. = T)
library(factoextra)
ev = get_eig(pca.result)
# ev = pca.result$sdev^2
fviz_eig(pca.result)
summary(pca.result)
# library(ggfortify)
# library(cluster)
# autoplot(clara(dat, 3))
data(diamonds)
fit = lm(price ~ carat + cut + color,data = diamods)
fit = lm(price ~ carat + cut + color,data = diamonds)
summary(fit)
library(tidyverse)
summary(diamonds$price)
diamonds = mutate(diamonds,cutPrice = (price>2400)*1)
diamonds
head(diamonds)
table(diamonds$cutPrice)
fit = glm(cutPrice ~ carat + color +clarity,data = diamonds, family = binomial())
summary(fit)
fit = glm(cutPrice ~ carat + color + clarity, data = diamonds, family = binomial())
summary(fit)
fit = lm(price ~ carat + cut, data = diamonds)
summary(fit)
head(diamonds)
diamonds$cut2 = as.factor(as.character(diamonds$cut))
fit = lm(price ~ carat + cut2, data = diamonds)
summary(fit)
fit = lm(price ~ carat + cut, data = diamonds)
summary(fit)
fit = lm(price ~ carat + cut2, data = diamonds)
summary(fit)
fit = lm(price ~ carat + cut, data = diamonds)
summary(fit)
fit = lm(price ~ carat + cut2, data = diamonds)
summary(fit)
fit = lm(price ~ carat + cut, data = diamonds)
summary(fit)
2
2
summary(fit)
fit = lm(price ~ carat + cut2, data = diamonds)
summary(fit)
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/data/data")
readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')%>% subject2df()
?log()
dat_proportion = prop.table(as.matrix(dat),margin = 1) %>% log10()
pca.result_p = prcomp(dat_proportion,scale. = T)
ev_p = get_eig(pca.result_p)
fviz_eig(pca.result_p)
dat_proportion = prop.table(as.matrix(dat),margin = 1) %>% log()
pca.result_p = prcomp(dat_proportion,scale. = T)
ev_p = get_eig(pca.result_p)
fviz_eig(pca.result_p)
# ev = pca.result$sdev^2
fviz_eig(pca.result)
pca.result$rotation
# library(ggfortify)
# library(cluster)
autoplot(clara(dat, 3))
# ev = pca.result$sdev^2
fviz_eig(pca.result)
pca.result_p$rotation
