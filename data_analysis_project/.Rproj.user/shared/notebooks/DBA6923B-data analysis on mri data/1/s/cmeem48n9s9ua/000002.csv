"0","#logistic regression"
"0","library(compositions)"
"0","library(factoextra)"
"0","library(tidyverse)"
"0","model = glm(Age~PC1+PC2,data = dat.train,family = binomial())"
"0","summary(model)"
"1","
Call:
"
"1","glm(formula = Age ~ PC1 + PC2, family = binomial(), data = dat.train)"
"1","

"
"1","Deviance Residuals: 
"
"1","    Min  "
"1","     1Q  "
"1"," Median  "
"1","     3Q  "
"1","    Max  "
"1","
"
"1","-1.8366  "
"1"," 0.6493  "
"1"," 0.6711  "
"1"," 0.6888  "
"1"," 0.7683  "
"1","
"
"1","
Coefficients:
"
"1","           "
"1"," Estimate"
"1"," Std. Error"
"1"," z value"
"1"," Pr(>|z|)"
"1","
(Intercept)"
"1","   17.280"
"1","     30.427"
"1","   0.568"
"1","    0.570"
"1","
PC1        "
"1","   41.287"
"1","     78.850"
"1","   0.524"
"1","    0.601"
"1","
PC2        "
"1","    8.826"
"1","     16.093"
"1","   0.548"
"1","    0.583"
"1","
"
"1","
(Dispersion parameter for "
"1","binomial"
"1"," family taken to be "
"1","1"
"1",")

"
"1","    Null deviance: 621.42  on 609  degrees of freedom
"
"1","Residual deviance: 620.91  on 607  degrees of freedom
"
"1","AIC: "
"1","626.91"
"1","

"
"1","Number of Fisher Scoring iterations: "
"1","4"
"1","
"
"1","
"
"0","# > contrasts(dat.train$Age)"
"0","#       26-30 31-35 36+"
"0","# 22-25     0     0   0"
"0","# 26-30     1     0   0"
"0","# 31-35     0     1   0"
"0","# 36+       0     0   1"
"0","if(F){"
"0","y = predict(model,pca.test)"
"0","dat.prediction = data.frame(pca.test, prob = exp(y)/(1+exp(y)))"
"0","rm(y)"
"0","view(pca.prediction)"
"0","}"
"0","if(T){"
"0","y = predict(model,dat.test,type = 'response')"
"0","dat.prediction = data.frame(dat.test, prob = y)"
"0","dat.prediction = dat.prediction %>% mutate(fitted.results = ifelse(dat.prediction$prob >= 0.7,1,0))"
"0","# view(dat.prediction)"
"0","print(paste('Mean of Probability', mean(dat.prediction$prob)))"
"0","hist(dat.prediction$prob)"
"0","# ptab = table(yPred, ytest[,1])"
"0","# sum(diag(ptab)) / sum(ptab)"
"0","# print(paste('Accuracy',)"
"0","print(paste('Accuracy',mean(dat.prediction$fitted.results)))"
"0","}"
"1","[1]"
"1"," ""Mean of Probability 0.793325551290113"""
"1","
"
"1","[1]"
"1"," ""Accuracy 1"""
"1","
"
