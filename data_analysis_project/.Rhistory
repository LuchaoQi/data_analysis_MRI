else if(sum(r[1]+r[2])==1){return(0)}
})
ts = unlist(ts)
ts
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})
View(ts)
ts.values
ts
unlist(ts)
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
ts
pbinom(0,10,0.5,lower.tail = F)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
pbinom(5,10,0.5,lower.tail = F)
pbinom(4,10,0.5,lower.tail = F)
pbinom(50,100,0.5,lower.tail = F)
pbinom(49,100,0.5,lower.tail = F)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<0.05){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<0.5){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = c(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
view(binomial_test_co_result)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = rbind(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
View(binomial_test_co_result)
ts
sample(ts,50,replace = T)
binomial_test_co_result = c()
for(i in 1:length(combinations[1,])){
id = combinations[,i]
mtx = dat[id,]
ts = apply(mtx,2,function(r){
if(r[1]==r[2]&r[1]==1){return(1)}
else if(sum(r[1]+r[2])==1){return(0)}
})%>%unlist()
ts = sample(ts,100,replace = T)
n1 = sum(ts)
n2 = length(ts)
if(pbinom(n1-1,n2,0.5,lower.tail = F)<1){binomial_test_co_result = rbind(binomial_test_co_result,c(rownames(mtx),pbinom(n1,n2,0.5,lower.tail = F)))}
}
View(binomial_test_co_result)
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj")
dat = read.csv('unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv',header = 1)
View(dat)
length(dat[1,])
dat = read.csv('unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv',header = 1,row.names = 1)
View(dat)
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data")
library(tidyverse)
library(MRIcloudT1volumetrics)
dat = readSubject('100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt')
dat = readSubject("100206_T1w_acpc_dc_297Labels_M2_corrected_stats.txt")
dat = readSubject("100307_T1w_acpc_dc_297Labels_M2_corrected_stats.txt")
setwd("C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj")
roiDir = "C:/Users/lcqi/OneDrive/Desktop/mri/mri_proj/data"
fileList = dir(roiDir)
fullPath = paste(roiDir, fileList[1], sep = "")
fileList
fullPath
dat = readSubject(fullPath)
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = "C:/Users/lcqi/OneDrive/Desktop/bcaffo/data_analysis_project/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
dat = list()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_type1 = raw_dat %>% filter(type ==1)
# unique(dat_type1$level
for (j in 1:4){
dat_each = dat_type1 %>% filter(level == j) %>% select(rawid,roi,volume) %>% spread(roi,volume)
dat[[paste0('level',j)]] = rbind(dat[[paste0('level',j)]],dat_each)
}
# dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
# dat = rbind(dat,dat_each)
}
#extract rawid (integer)
for (j in 1:4){
id = dat[[paste0('level',j)]]$rawid
dat[[paste0('level',j)]]$rawid = as.numeric(sapply(strsplit(id,"_"),function(x) x[1]))
}
#level1 pca
library(factoextra)
library(magrittr)
dat_proportion = dat$level1[, !colnames(dat$level1) %in% "rawid"]
dat_proportion = prop.table(as.matrix(dat_proportion),margin = 1) %>% log()
#PC cumulative proportion
res.pca = prcomp(dat_proportion,scale. = T)
#Eigenvalues
ev_p = get_eig(res.pca)
#barplot(ev_p$eigenvalue)
fviz_eig(res.pca)
# summary(res.pca)
#feature-weighted PCA results
# dat_visualization = melt(res.pca$rotation)
library(data.table)
dat_visualization = prop.table(abs(res.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
# dat_visualization[,3] = abs(dat_visualization[,3])
print(
ggplot(dat_visualization, aes(x = as.factor(PC),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'PC', title = 'type1, level1')
)
#sublevel
library(factoextra)
for (i in 1:2){
dat_proportion = prop.table(as.matrix(dat[[paste0('level',i)]]),margin = 1) %>% log()
res.pca = prcomp(dat_proportion,scale. = T)
ev_p = get_eig(res.pca)
fviz_eig(res.pca)
# summary(res.pca)
# dat_visualization = melt(res.pca$rotation)
dat_visualization = prop.table(abs(res.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
dat_visualization[,3] = abs(dat_visualization[,3])
print(
ggplot(dat_visualization, aes(x = as.factor(PC),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank(),
axis.text.x = element_text(size = 10, angle = 90,vjust=0)) + labs(x = 'PC', title = paste('type1, level',i))
)
}
#compositional pca
library(robCompositions)
# res.rob = pcaCoDa(dat$level1[,-1])
# dat_proportion = prop.table(as.matrix(dat_proportion),margin = 1)%>% log() %>% abs()
# res.rob = pcaCoDa(as.data.frame(dat_proportion))
# res.rob = pcaCoDa(dat$level1[,-1]/sum(dat$level1[,-1]))
#
# dat_visualization = prop.table(abs(res.rob$loadings),margin = 2) %>% melt()
# colnames(dat_visualization) = c('roi','Comp','value')
#
#
# # res.rob$eigenvalues
# #plot eigenvalues
# plot(res.rob)
# ggplot(dat_visualization, aes(x = as.factor(Comp),
#                     y = value,
#                     fill = as.factor(roi))
#            ) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
# In pcaCoDa package, guess already preprocess the data to get the proportion
res.rob = pcaCoDa(dat$level1[,-1])
dat_visualization = prop.table(abs(res.rob$loadings),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
#plot eigenvalues
plot(res.rob)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
#data processing
library(tidyverse)
ref = read.csv("C:/Users/lcqi/OneDrive/Desktop/bcaffo/data_analysis_project/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv", header = T)
colnames(ref)[1] = 'rawid'
dat_cor = left_join(dat$level1, ref[,c('rawid','Age','Gender')], by="rawid")
#correlation accross gender == M
dat_gender = list()
dat_gender$M = filter(dat_cor, Gender == 'M')
dat_gender$M = dat_gender$M[, !colnames(dat_gender$M) %in% c('rawid','Age','Gender')]
# res = cor(dat_gender[, !colnames(dat_gender) %in% c('rawid','Age','Gender')])
library(Hmisc)
res.M = rcorr(as.matrix(dat_gender$M))
#correlation matrix
res.M$r
#visualization
library(corrplot)
corrplot(res.M$r, type="upper", order="hclust",
p.mat = res.M$P, sig.level = 0.05, insig = "blank",
tl.srt=45,
diag=FALSE)
#gender == F
dat_gender$F = filter(dat_cor, Gender == 'F')
dat_gender$F = dat_gender$F[, !colnames(dat_gender$F) %in% c('rawid','Age','Gender')]
# res = cor(dat_gender$F[, !colnames(dat_gender$F) %in% c('rawid','Age','Gender')])
res.F = rcorr(as.matrix(dat_gender$F))
corrplot(res.F$r, type="upper", order="hclust",
p.mat = res.F$P, sig.level = 0.05, insig = "blank",
# addCoef.col = "black",
tl.srt=45,
diag=FALSE)
#another way for compositional data analysis
library(compositions)
library(factoextra)
#across age
Age = as.character(unique(dat_cor$Age))
Age = sort(Age[!is.na(Age)])
dat_age = list()
for (i in Age){
a = dat_cor %>% filter(Age == i)
dat_age[[i]] =  a[, !colnames(a) %in% c('rawid','Age','Gender')]
}
for (i in names(dat_age)){
cdata = acomp(dat_age[[i]])
cdata.pca = prcomp(cdata,scale. = T)
dat_visualization = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
print(
fviz_eig(cdata.pca)
)
print(
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = paste('compositional PCA across age',i))
)
}
library(compositions)
library(compositions)
res.comp = acomp(dat$level1[,-1]) %>% prcomp()
dat_visualization = prop.table(abs(res.comp$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
#plot eigenvalues
plot(res.rob)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
library(compositions)
res.comp = acomp(dat$level1[,-1]) %>% prcomp()
dat_visualization = prop.table(abs(res.comp$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
#plot eigenvalues
plot(res.comp)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
library(compositions)
library(factoextra)
res.comp = acomp(dat$level1[,-1]) %>% prcomp()
dat_visualization = prop.table(abs(res.comp$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
# #plot eigenvalues
# plot(res.comp)
fviz_eig(res.comp)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
head(dat$level1)
library(compositions)
library(factoextra)
res.comp = dat$level1[,-1] %>% prop.table(margin = 1) %>% acomp()%>% prcomp()
library(compositions)
library(factoextra)
res.comp = dat$level1[,-1] %>% as.matrix() %>% prop.table(margin = 1) %>% acomp()%>% prcomp()
dat_visualization = prop.table(abs(res.comp$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
# #plot eigenvalues
# plot(res.comp)
fviz_eig(res.comp)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
library(compositions)
library(factoextra)
res.comp = dat$level1[,-1] %>%  acomp()%>% prcomp()
dat_visualization = prop.table(abs(res.comp$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
# res.rob$eigenvalues
# #plot eigenvalues
# plot(res.comp)
fviz_eig(res.comp)
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = 'type1, level1, compositional PCA')
head(dat$level1[,-1] %>% acomp())
a = dat$level1[,-1] %>% acomp()
a
view(a)
a %>% prcomp()
#another way for compositional data analysis
library(compositions)
library(factoextra)
#across age
Age = as.character(unique(dat_cor$Age))
Age = sort(Age[!is.na(Age)])
dat_age = list()
for (i in Age){
a = dat_cor %>% filter(Age == i)
dat_age[[i]] =  a[, !colnames(a) %in% c('rawid','Age','Gender')]
}
for (i in names(dat_age)){
cdata = acomp(dat_age[[i]])
cdata.pca = prcomp(cdata,scale. = T)
dat_visualization = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
print(
fviz_eig(cdata.pca)
)
print(
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = paste('compositional PCA across age',i))
)
}
res.pca
res.pca$x
names(res.pca$x)
view(res.pca$x)
?prcomp
```{r setup, include=FALSE}
knitr::opts_chunk$set(message = FALSE)
rm(list = ls())
rm(list = ls())
Packages = c('tidyverse','MRIcloudT1volumetrics','factoextra','magrittr','compositions','data.table')
lapply(Packages, library, character.only = TRUE)
rm(Packages)
# view(dat_type1 %>% filter(level == 5))
# data processing
roiDir = "C:/Users/lcqi/OneDrive/Desktop/bcaffo/data_analysis_project/data"
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
dat = list()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_type1 = raw_dat %>% filter(type ==1)
# unique(dat_type1$level
for (j in 1:4){
dat_each = dat_type1 %>% filter(level == j) %>% select(rawid,roi,volume) %>% spread(roi,volume)
dat[[paste0('level',j)]] = rbind(dat[[paste0('level',j)]],dat_each)
}
# dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
# dat = rbind(dat,dat_each)
}
#extract rawid (integer)
for (j in 1:4){
id = dat[[paste0('level',j)]]$rawid
dat[[paste0('level',j)]]$rawid = as.numeric(sapply(strsplit(id,"_"),function(x) x[1]))
}
ref = read.csv("C:/Users/lcqi/OneDrive/Desktop/bcaffo/data_analysis_project/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv", header = T)
colnames(ref)[1] = 'rawid'
#combine with patient info
dat_cor = list()
for(i in 1:4){
dat_cor[[paste0('level',i)]] = left_join(dat[[paste0('level',i)]], ref[,c('rawid','Age','Gender')], by="rawid")
}
#across age
Age = as.character(unique(dat_cor$level1$Age))
Age = sort(Age[!is.na(Age)])
dat_age = list()
for (i in Age){
a = dat_cor$level1 %>% filter(Age == i)
dat_age[[i]] =  a[, !colnames(a) %in% c('rawid','Age','Gender')]
}
res.rotations = list()
for (i in names(dat_age)){
#compositional data
cdata = acomp(dat_age[[i]])
#pca
cdata.pca = prcomp(cdata,scale. = T)
dat_visualization = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
res.rotations[[i]] = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt() %>% filter(Var2 == 'PC1')
colnames(res.rotations[[i]]) = c('roi','PC','value')
print(
fviz_eig(cdata.pca)
)
print(
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = paste('compositional PCA across age',i))
)
}
res.rotations$compile = c()
for (i in names(dat_age)){
res.rotations$compile = rbind(res.rotations$compile, select(res.rotations[[i]],c(roi,value)) %>% mutate(Age = i))
}
ggplot(res.rotations$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC1')
#PCA after getting rid of CSF
dat_age_noCSF = list()
#compositional analysis
for(i in Age){
dat_age_noCSF[[i]] = dat_age[[i]] %>%
select(-CSF) %>% acomp()
}
res.pca = list()
res.rotations_noCSF = list()
for(i in Age){
res.pca[[i]] = prcomp(dat_age_noCSF[[i]],scale. = T)
dat_visualization = prop.table(abs(res.pca[[i]]$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
#further work on PC1
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC1')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC1')
# PC2 analysis
for ( i in Age){
dat_visualization = prop.table(abs(res.pca[[i]]$rotation), margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC2')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC2')
#PC3
for ( i in Age){
dat_visualization = prop.table(abs(res.pca[[i]]$rotation), margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC3')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC3')
