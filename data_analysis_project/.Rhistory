# dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
# dat = rbind(dat,dat_each)
}
gwtwd
getwd
getwd()
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = getwd()
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
dat = list()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_type1 = raw_dat %>% filter(type ==1)
# unique(dat_type1$level
for (j in 1:4){
dat_each = dat_type1 %>% filter(level == j) %>% select(rawid,roi,volume) %>% spread(roi,volume)
dat[[paste0('level',j)]] = rbind(dat[[paste0('level',j)]],dat_each)
}
# dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
# dat = rbind(dat,dat_each)
}
roiDir = paste0(getwd(),'/data')
roiDir
library(tidyverse)
library(MRIcloudT1volumetrics)
roiDir = paste0(getwd(),'/data')
fileList = dir(roiDir)
#type = 1, level = 1
# dat = dat %>% mutate(volume_demean = volume - mean(volume))%>% select(roi,volume_demean)%>% spread(roi,volume_demean)
dat = c()
dat = list()
for (i in 1:length(fileList)){
fullPath = paste(roiDir, fileList[i], sep = "/")
raw_dat = readSubject(fullPath) %>% subject2df()
dat_type1 = raw_dat %>% filter(type ==1)
# unique(dat_type1$level
for (j in 1:4){
dat_each = dat_type1 %>% filter(level == j) %>% select(rawid,roi,volume) %>% spread(roi,volume)
dat[[paste0('level',j)]] = rbind(dat[[paste0('level',j)]],dat_each)
}
# dat_each = raw_dat %>% filter(type == 1, level == 1) %>% select(roi,volume) %>% spread(roi,volume)
# dat = rbind(dat,dat_each)
}
#extract rawid (integer)
for (j in 1:4){
id = dat[[paste0('level',j)]]$rawid
dat[[paste0('level',j)]]$rawid = as.numeric(sapply(strsplit(id,"_"),function(x) x[1]))
}
#compositional data analysis across age
library(compositions)
library(factoextra)
library(data.table)
#data processing
library(tidyverse)
ref = read.csv("C:/Users/lcqi/OneDrive/Desktop/bcaffo/data_analysis_project/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv", header = T)
paste0(getwd(),/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv)
paste0(getwd(),'/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv')
#compositional data analysis across age
library(compositions)
library(factoextra)
library(data.table)
#data processing
library(tidyverse)
ref = read.csv(paste0(getwd(),'/unrestricted_bcaffo_12_12_2017_12_17_8.csv%3B.csv'), header = T)
colnames(ref)[1] = 'rawid'
#combine with patient info
dat_cor = list()
for(i in 1:4){
dat_cor[[paste0('level',i)]] = left_join(dat[[paste0('level',i)]], ref[,c('rawid','Age','Gender')], by="rawid")
}
#across age
Age = as.character(unique(dat_cor$level1$Age))
Age = sort(Age[!is.na(Age)])
dat_age = list()
for (i in Age){
a = dat_cor$level1 %>% filter(Age == i)
dat_age[[i]] =  a[, !colnames(a) %in% c('rawid','Age','Gender')]
}
res.rotations = list()
for (i in names(dat_age)){
#compositional data
cdata = acomp(dat_age[[i]])
#pca
cdata.pca = prcomp(cdata,scale. = T)
dat_visualization = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','Comp','value')
res.rotations[[i]] = prop.table(abs(cdata.pca$rotation),margin = 2) %>% melt() %>% filter(Var2 == 'PC1')
colnames(res.rotations[[i]]) = c('roi','PC','value')
print(
fviz_eig(cdata.pca)
)
print(
ggplot(dat_visualization, aes(x = as.factor(Comp),
y = value,
fill = as.factor(roi))
) + geom_col() +theme(legend.title = element_blank()) + labs(x = 'Comp', title = paste('compositional PCA across age',i))
)
}
res.rotations$compile = c()
for (i in names(dat_age)){
res.rotations$compile = rbind(res.rotations$compile, select(res.rotations[[i]],c(roi,value)) %>% mutate(Age = i))
}
ggplot(res.rotations$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC1')
view(dat_cor)
view(dat_cor$level1)
view(dat_cor$level1$Age)
view(dat_cor$level1)
#PCA after getting rid of CSF
library(compositions)
library(factoextra)
dat_age_noCSF = list()
#compositional analysis
for(i in Age){
dat_age_noCSF[[i]] = dat_age[[i]] %>%
select(-CSF) %>% acomp()
}
res.pca = list()
res.rotations_noCSF = list()
for(i in Age){
res.pca[[i]] = prcomp(dat_age_noCSF[[i]],scale. = T)
dat_visualization = prop.table(abs(res.pca[[i]]$rotation),margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
#further work on PC1
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC1')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC1')
# PC2 analysis
for ( i in Age){
dat_visualization = prop.table(abs(res.pca[[i]]$rotation), margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC2')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC2')
#PC3
for ( i in Age){
dat_visualization = prop.table(abs(res.pca[[i]]$rotation), margin = 2) %>% melt()
colnames(dat_visualization) = c('roi','PC','value')
res.rotations_noCSF[[i]] = dat_visualization %>% filter(PC == 'PC3')
}
res.rotations_noCSF$compile = c()
for (i in Age){
res.rotations_noCSF$compile = rbind(res.rotations_noCSF$compile,
select(res.rotations_noCSF[[i]],c(roi,value))
%>% mutate(Age = i))
}
ggplot(res.rotations_noCSF$compile, aes(x = Age,y = value,colour = roi,group = roi)) +
geom_line() +
labs(title = 'Compositional analysis: weight of roi in PC3')
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
library(pls)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
# correlation accross age in all genders
library(compositions)
library(corrplot)
res.allgender = list()
dat_all_gender = list()
for ( i in Age){
dat_all_gender[[i]] = filter(dat_cor$level1, Age == i) %>% select(-c(rawid,Age,Gender))
res.allgender[[i]] = acomp(dat_all_gender[[i]])
A =   corrplot(cor(res.allgender[[i]]), type="upper",
# order="hclust",
# title = 'All genders',
# tl.srt=30,
diag=FALSE)
}
# correlation accross age in all genders
library(compositions)
library(corrplot)
res.allgender = list()
dat_all_gender = list()
for ( i in Age){
dat_all_gender[[i]] = filter(dat_cor$level1, Age == i) %>% select(-c(rawid,Age,Gender))
res.allgender[[i]] = acomp(dat_all_gender[[i]])
A =   corrplot(cor(res.allgender[[i]]), type="upper",
# order="hclust",
# title = 'All genders',
# tl.srt=30,
diag=FALSE)
}
# correlation accross age in all genders
library(compositions)
library(corrplot)
res.allgender = list()
dat_all_gender = list()
for ( i in Age){
dat_all_gender[[i]] = filter(dat_cor$level1, Age == i) %>% select(-c(rawid,Age,Gender))
res.allgender[[i]] = acomp(dat_all_gender[[i]])
corrplot(cor(res.allgender[[i]]), type="upper",
# order="hclust",
# title = 'All genders',
# tl.srt=30,
diag=FALSE)
}
# correlation accross age in all genders
library(compositions)
library(corrplot)
res.allgender = list()
dat_all_gender = list()
for ( i in Age){
dat_all_gender[[i]] = filter(dat_cor$level1, Age == i) %>% select(-c(rawid,Age,Gender))
res.allgender[[i]] = acomp(dat_all_gender[[i]])
corrplot(cor(res.allgender[[i]]), type="upper",
# order="hclust",
# title = 'All genders',
# tl.srt=30,
diag=FALSE)
}
rm(A)
# correlation analysis across age
# gender = Male
library(compositions)
library(corrplot)
dat_male = list()
res.male = list()
for ( i in Age){
dat_male[[i]] = filter(dat_cor$level1, Gender == 'M', Age == i) %>% select(-c(rawid,Age,Gender))
res.male[[i]] = acomp(dat_male[[i]])
corrplot(cor(res.male[[i]]), type="upper",
# order="hclust",
# tl.srt=30,
# title = 'Male',
diag=FALSE)
}
# correlation analysis across age
# gender = Female
dat_female = list()
res.female = list()
for ( i in Age){
dat_female[[i]] = filter(dat_cor$level1, Gender == 'F', Age == i) %>% select(-c(rawid,Age,Gender))
res.female[[i]] = acomp(dat_female[[i]])
corrplot(cor(res.female[[i]]), type="upper",
# order="hclust",
# tl.srt=30,
# title = 'Female',
diag=FALSE)
}
view(res.allgender$`22-25`)
mean(res.allgender$`22-25`$Myelencephalon )
mean(res.allgender$`22-25`$Myelencephalon)
mean(res.allgender$`22-25`[,Myelencephalon])
mean(res.allgender$`22-25`[,'Myelencephalon'])
mean(res.allgender$`22-25`$Myelencephalon)
mean(res.allgender$`22-25`[,'Myelencephalon'])
mean(res.allgender$`26-30`[,'Myelencephalon'])
mean(res.allgender$`31-35`[,'Myelencephalon'])
mean(res.allgender$`36+`[,'Myelencephalon'])
mean(dat_age_noCSF$`22-25`[,'Myelencephalon'])
mean(dat_age_noCSF$`26-30`[,'Myelencephalon'])
mean(dat_age_noCSF$`31-35`[,'Myelencephalon'])
mean(dat_age_noCSF$`36+`[,'Myelencephalon'])
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1) %>% fixBasalForebrain()
raw_dat = readSubject(fullPath)
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1) %>% fixBasalForebrain()
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1) %>% fixBasalForebrain()
view(dat_type1 %>% filter(level == 5))
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1)
view(dat_type1 %>% filter(level == 5))
view(dat_type1 %>% filter(level == 5))
view(dat_age_noCSF)
view(dat_age_noCSF$`26-30`)
mean(dat_age_noCSF$`36+`[,'Metencephalon'])
mean(dat_age_noCSF$`22-25`[,'Metencephalon'])
mean(dat_age_noCSF$`26-30`[,'Metencephalon'])
mean(dat_age_noCSF$`31-35`[,'Metencephalon'])
mean(dat_age_noCSF$`36+`[,'Metencephalon'])
model = model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
model = model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
library(caret)
model = model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
view(dat_all_gender)
view(dat_all_gender$`22-25`)
# correlation accross age in all genders
library(compositions)
library(corrplot)
res.allgender = list()
dat_all_gender = list()
for ( i in Age){
dat_all_gender[[i]] = filter(dat_cor$level1, Age == i) %>% select(-c(rawid,Age,Gender,CSF))
res.allgender[[i]] = acomp(dat_all_gender[[i]])
corrplot(cor(res.allgender[[i]]), type="upper",
# order="hclust",
# title = 'All genders',
# tl.srt=30,
diag=FALSE)
}
# correlation analysis across age
# gender = Male
library(compositions)
library(corrplot)
dat_male = list()
res.male = list()
for ( i in Age){
dat_male[[i]] = filter(dat_cor$level1, Gender == 'M', Age == i) %>% select(-c(rawid,Age,Gender,CSF))
res.male[[i]] = acomp(dat_male[[i]])
corrplot(cor(res.male[[i]]), type="upper",
# order="hclust",
# tl.srt=30,
# title = 'Male',
diag=FALSE)
}
# correlation analysis across age
# gender = Female
dat_female = list()
res.female = list()
for ( i in Age){
dat_female[[i]] = filter(dat_cor$level1, Gender == 'F', Age == i) %>% select(-c(rawid,Age,Gender,CSF))
res.female[[i]] = acomp(dat_female[[i]])
corrplot(cor(res.female[[i]]), type="upper",
# order="hclust",
# tl.srt=30,
# title = 'Female',
diag=FALSE)
}
view(dat_pcr)
dat_pcr = dat_cor$level1 %>% select(-c(rawid,Gender,Age)) %>% acomp() %>% as.data.frame()
dat_pcr$Age = dat_cor$level1$Age %>% as.factor()
dat_pcr$Age = dat_cor$level1$Age %>% as.factor()
view(dat_pcr)
#pca regression
library(pls)
library(compositions)
dat_pcr = dat_cor$level1 %>% select(-c(rawid,Gender,Age,CSF)) %>% acomp() %>% as.data.frame()
dat_pcr$Age = dat_cor$level1$Age %>% as.factor()
library(caret)
model = model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
view(dat_pcr)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
dat_pcr = dat_cor$level1 %>% select(-c(rawid,Gender,Age,CSF)) %>% acomp() %>% as.data.frame()
dat_pcr$Age = dat_pcr$Age %>% as.factor()
dat_pcr = dat_cor$level1 %>% select(-c(rawid,Gender,Age,CSF)) %>% acomp() %>% as.data.frame()
view(dat_pcr)
dat_pcr$Age = dat_cor$level1$Age %>% as.factor()
view(dat_pcr)
class(dat_pcr$Age)
view(dat_type1 %>% filter(level == 5))
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1) %>% fixBasalForebrain()
view(dat_type1 %>% filter(level == 5))
view(dat_age_noCSF$`36+`)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1)
view(dat_type1 %>% filter(level == 5))
dat_type1 = raw_dat %>% subject2df() %>% filter(type ==1) %>% fixBasalForebrain()
view(dat_type1 %>% filter(level == 5))
?fixBasalForebrain
?lm
res.pca$`22-25`$x
?prcomp
res.pca$`36+`$center
res.pca$`36+`$rotation
res.pca$`36+`$x
?prcomp
library(prcomp)
Age
res.pca$`22-25`$x
pca.score = list()
pca.score = list()
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
}
pca.score$`22-25`
pca.score$`36+`
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
pca.score[[i]]$Age = i
}
pca.score$`36+`
pca.score[[i]] = res.pca[[i]]$x
pca.score$`36+`
pca.score$`31-35`
pca.score = list()
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
# pca.score[[i]]$Age = i
}
pca.score$`36+`
i
pca.score$`36+`$Age = i
pca.score$`36+`
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
# pca.score[[i]]$Age = i
}
pca.score$`36+`
dat_cor$level1$Age
pca.score = list()
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
pca.score[[i]]$Age = rep(i,nrow(pca.score[[i]]))
}
pca.score$`36+`
pca.score[[i]] = res.pca[[i]]$x
pca.score$`36+`
nrow(pca.score$`36+`)
rep(i,nrow(pca.score$`36+`))
pca.score$`36+`$Age = nrow(pca.score$`36+`)
pca.score$`36+`$Age = rep(i,nrow(pca.score$`36+`))
pca.score$`36+`
for ( i in Age){
pca.score[[i]] = res.pca[[i]]$x
# pca.score[[i]]$Age = rep(i,nrow(pca.score[[i]]))
}
pca.score$`36+`
cbind(pca.score$`36+`,rep(i,nrow(pca.score[[i]])))
data.frame(pca.score$`36+`,Age = rep(i,nrow(pca.score[[i]])))
pca.score = list()
for ( i in Age){
pca.score[[i]]= data.frame(pca.score[[i]],Age = rep(i,nrow(pca.score[[i]])))
}
#pca regression
if(F){
library(pls)
library(compositions)
dat_pcr = dat_cor$level1 %>% select(-c(rawid,Gender,Age,CSF)) %>% acomp() %>% as.data.frame()
dat_pcr$Age = dat_cor$level1$Age %>% as.factor()
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
library(caret)
model <- train(
Age~., data = dat_pcr, method = "pcr",
scale = TRUE,
trControl = trainControl("cv", number = 10),
tuneLength = 10
)
model = pcr(Age~., data = dat_pcr, scale = TRUE, validation = "CV")
summary(model)
}
pca.score = list()
for ( i in Age){
pca.score[[i]]= data.frame(res.pca[[i]]$x,Age = rep(i,nrow(res.pca[[i]]$x)))
}
pca.score$`36+`
pca.score = list()
for ( i in Age){
c
q
a
1
1
21
3
21
3=
asd
q
quit()
for ( i in Age){
pca.score[[i]]= data.frame(res.pca[[i]]$x,Age = as.factor(
rep(i,nrow(res.pca[[i]]$x)))
)
}
pca.score = list()
for ( i in Age){
pca.score[[i]]= data.frame(res.pca[[i]]$x,Age = as.factor(
rep(i,nrow(res.pca[[i]]$x)))
)
}
